// –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ø—Ä–æ–¥–∞–∫—à–Ω —Å–µ—Ä–≤–µ—Ä—É
const io = require('socket.io-client');

const SERVER_URL = 'https://monkey-flipper.onrender.com';

console.log('üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É:', SERVER_URL);

const socket = io(SERVER_URL, {
    transports: ['websocket', 'polling'],
    reconnection: false
});

socket.on('connect', () => {
    console.log('‚úÖ –ü–û–î–ö–õ–Æ–ß–ï–ù–û! Socket ID:', socket.id);
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –º–∞—Ç—á–∞
    console.log('üîç –û—Ç–ø—Ä–∞–≤–ª—è—é findMatch...');
    socket.emit('findMatch', {
        userId: 'test_user_' + Date.now(),
        username: 'Test Player'
    });
});

socket.on('searching', () => {
    console.log('üîç –°–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—Ç–∏–ª: searching');
    console.log('‚úÖ –í–°–Å –†–ê–ë–û–¢–ê–ï–¢!');
    
    setTimeout(() => {
        console.log('\nüìä –ò–¢–û–ì: –°–µ—Ä–≤–µ—Ä –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–µ–Ω');
        socket.disconnect();
        process.exit(0);
    }, 1000);
});

socket.on('connect_error', (err) => {
    console.error('‚ùå –û–®–ò–ë–ö–ê –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:', err.message);
    process.exit(1);
});

socket.on('error', (err) => {
    console.error('‚ùå –û–®–ò–ë–ö–ê Socket.IO:', err);
    process.exit(1);
});

// –¢–∞–π–º–∞—É—Ç –Ω–∞ —Å–ª—É—á–∞–π –∑–∞–≤–∏—Å–∞–Ω–∏—è
setTimeout(() => {
    console.error('‚è±Ô∏è –¢–ê–ô–ú–ê–£–¢: –°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª –∑–∞ 10 —Å–µ–∫—É–Ω–¥');
    process.exit(1);
}, 10000);
